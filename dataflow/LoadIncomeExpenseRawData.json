{
	"name": "LoadIncomeExpenseRawData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "IncomeExpenseRawExcel",
						"type": "DatasetReference"
					},
					"name": "GetIncomeExpenseSourceDate"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "IncomeExpenceStg",
						"type": "DatasetReference"
					},
					"name": "LoadIncomeExpenseRawData"
				}
			],
			"transformations": [
				{
					"name": "TransformDataType"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          TransDate as string,",
				"          Description_text as string,",
				"          PropertyIndex as string,",
				"          UnitIndex as string,",
				"          Property as string,",
				"          Category as string,",
				"          DebitAmount as string,",
				"          CreditAmount as string,",
				"          CheckNo as string,",
				"          Account as string,",
				"          IndexT as string,",
				"          TKey as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> GetIncomeExpenseSourceDate",
				"GetIncomeExpenseSourceDate cast(output(",
				"          TransDate as date 'MM/dd/yyyy',",
				"          DebitAmount as double,",
				"          CreditAmount as double",
				"     ),",
				"     errors: true) ~> TransformDataType",
				"TransformDataType select(mapColumn(",
				"          TransDate,",
				"          Description_text,",
				"          PropertyIndex,",
				"          UnitIndex,",
				"          Property,",
				"          Category,",
				"          DebitAmount,",
				"          CreditAmount,",
				"          CheckNo,",
				"          Account,",
				"          IndexT,",
				"          TKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     postSQLs:['SELECT * FROM stg.income_expense_raw WHERE [TransDate] IS '],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> LoadIncomeExpenseRawData"
			]
		}
	}
}