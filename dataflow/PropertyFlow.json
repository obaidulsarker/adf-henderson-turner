{
	"name": "PropertyFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PropertyRawExcelData",
						"type": "DatasetReference"
					},
					"name": "PropertySourceRawData"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SnapshotDate as string,",
				"          PropertyIndex as string,",
				"          PropertyName as string,",
				"          PropertyAddress as string,",
				"          PropertyType as string,",
				"          AcquisitionDate as string,",
				"          OriginalPurchasePrice as string,",
				"          {Current MarketValue} as string,",
				"          CapitalExpenditures as string,",
				"          InsuranceCosts as string,",
				"          Occupancy as string,",
				"          Taxes as string,",
				"          DebtMortgageBalance as string,",
				"          YearBuilt as string,",
				"          SquareFootage as string,",
				"          Neighborhood as string,",
				"          TaxAssessmentValue as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> PropertySourceRawData",
				"PropertySourceRawData select(mapColumn(",
				"          SnapshotDate,",
				"          PropertyIndex,",
				"          PropertyName,",
				"          PropertyAddress,",
				"          PropertyType,",
				"          AcquisitionDate,",
				"          OriginalPurchasePrice,",
				"          {Current MarketValue},",
				"          CapitalExpenditures,",
				"          InsuranceCosts,",
				"          Occupancy,",
				"          Taxes,",
				"          DebtMortgageBalance,",
				"          YearBuilt,",
				"          SquareFootage,",
				"          Neighborhood,",
				"          TaxAssessmentValue",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}