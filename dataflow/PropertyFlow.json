{
	"name": "PropertyFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PropertyRawExcelData",
						"type": "DatasetReference"
					},
					"name": "PropertySourceRawData"
				},
				{
					"dataset": {
						"referenceName": "PropertyType",
						"type": "DatasetReference"
					},
					"name": "PropertyType"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "GetPropertyTypeColumn"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "exists1"
				},
				{
					"name": "CurrentTimeStamp"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SnapshotDate as string,",
				"          PropertyIndex as string,",
				"          PropertyName as string,",
				"          PropertyAddress as string,",
				"          PropertyType as string,",
				"          AcquisitionDate as string,",
				"          OriginalPurchasePrice as string,",
				"          {Current MarketValue} as string,",
				"          CapitalExpenditures as string,",
				"          InsuranceCosts as string,",
				"          Occupancy as string,",
				"          Taxes as string,",
				"          DebtMortgageBalance as string,",
				"          YearBuilt as string,",
				"          SquareFootage as string,",
				"          Neighborhood as string,",
				"          TaxAssessmentValue as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> PropertySourceRawData",
				"source(output(",
				"          property_type_id as integer,",
				"          property_type as string,",
				"          last_updated_at as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> PropertyType",
				"PropertySourceRawData select(mapColumn(",
				"          property_type = PropertyType",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> GetPropertyTypeColumn",
				"GetPropertyTypeColumn aggregate(groupBy(property_type),",
				"     property_type = ERROR_FUNCTION('')) ~> aggregate1",
				"aggregate1, PropertyType exists(aggregate1@property_type == PropertyType@property_type,",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"exists1 derive() ~> CurrentTimeStamp"
			]
		}
	}
}